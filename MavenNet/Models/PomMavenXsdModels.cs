// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.34.0.
namespace MavenNet.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;project&amp;gt;&lt;/code&gt; element is the root of the descriptor.
///        The following table lists all of the possible child elements.
///        
///      </para>
    /// <para>3.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;project&amp;gt;&lt;/code&gt; element is the root of the descriptor.
///        The following table lists all of the possible child elements.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Project")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlRootAttribute("project")]
    public partial class Project
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Declares to which version of project descriptor this POM conforms.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("modelVersion", DataType="string")]
        public string ModelVersion { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The location of the parent project, if one exists. Values from the parent
///            project will be the default for this project if they are left unspecified. The location
///            is given as a group ID, artifact ID and version.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parent")]
        public Parent Parent { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            A universally unique identifier for a project. It is normal to
///            use a fully-qualified package name to distinguish it from other
///            projects with a similar name (eg. &lt;code&gt;org.apache.maven&lt;/code&gt;).
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The identifier for this artifact that is unique within the group given by the
///            group ID. An artifact is something that is either produced or used by a project.
///            Examples of artifacts produced by Maven for a project include: JARs, source and binary
///            distributions, and WARs.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The current version of the artifact produced by this project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _packaging = "jar";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The type of artifact this project produces, for example &lt;code&gt;jar&lt;/code&gt;
///              &lt;code&gt;war&lt;/code&gt;
///              &lt;code&gt;ear&lt;/code&gt;
///              &lt;code&gt;pom&lt;/code&gt;.
///            Plugins can create their own packaging, and
///            therefore their own packaging types,
///            so this list does not contain all possible types.
///            
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("jar")]
        [System.Xml.Serialization.XmlElementAttribute("packaging", DataType="string")]
        public string Packaging
        {
            get
            {
                return this._packaging;
            }
            set
            {
                this._packaging = value;
            }
        }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The full name of the project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>A detailed description of the project, used by Maven whenever it needs to
///            describe the project, such as on the web site. While this element can be specified as
///            CDATA to enable the use of HTML tags within the description, it is discouraged to allow
///            plain text representation. If you need to modify the index page of the generated web
///            site, you are able to specify your own instead of adjusting this text.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("description", DataType="string")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The URL to the project's homepage.
///            &lt;br /&gt;&lt;b&gt;Default value is&lt;/b&gt;: parent value [+ path adjustment] + artifactId
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The year of the project's inception, specified with 4 digits. This value is
///            used when generating copyright notices as well as being informational.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("inceptionYear", DataType="string")]
        public string InceptionYear { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>This element describes various attributes of the organization to which the
///            project belongs. These attributes are utilized when documentation is created (for
///            copyright notices and links).</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("organization")]
        public Organization Organization { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<License> _licenses;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            This element describes all of the licenses for this project.
///            Each license is described by a &lt;code&gt;license&lt;/code&gt; element, which
///            is then described by additional elements.
///            Projects should only list the license(s) that applies to the project
///            and not the licenses that apply to dependencies.
///            If multiple licenses are listed, it is assumed that the user can select
///            any of them, not that they must accept all.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("licenses")]
        [System.Xml.Serialization.XmlArrayItemAttribute("license")]
        public System.Collections.Generic.List<License> Licenses
        {
            get
            {
                return this._licenses;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Licenses-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Licenses collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LicensesSpecified
        {
            get
            {
                return (this.Licenses.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Project" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Project" /> class.</para>
        /// </summary>
        public Project()
        {
            this._licenses = new System.Collections.Generic.List<License>();
            this._developers = new System.Collections.Generic.List<Developer>();
            this._contributors = new System.Collections.Generic.List<Contributor>();
            this._mailingLists = new System.Collections.Generic.List<MailingList>();
            this._modules = new System.Collections.Generic.List<string>();
            this._dependencies = new System.Collections.Generic.List<Dependency>();
            this._repositories = new System.Collections.Generic.List<Repository>();
            this._pluginRepositories = new System.Collections.Generic.List<Repository>();
            this._profiles = new System.Collections.Generic.List<Profile>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Developer> _developers;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Describes the committers of a project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("developers")]
        [System.Xml.Serialization.XmlArrayItemAttribute("developer")]
        public System.Collections.Generic.List<Developer> Developers
        {
            get
            {
                return this._developers;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Developers-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Developers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DevelopersSpecified
        {
            get
            {
                return (this.Developers.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Contributor> _contributors;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Describes the contributors to a project that are not yet committers.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("contributors")]
        [System.Xml.Serialization.XmlArrayItemAttribute("contributor")]
        public System.Collections.Generic.List<Contributor> Contributors
        {
            get
            {
                return this._contributors;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Contributors-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Contributors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContributorsSpecified
        {
            get
            {
                return (this.Contributors.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MailingList> _mailingLists;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Contains information about a project's mailing lists.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("mailingLists")]
        [System.Xml.Serialization.XmlArrayItemAttribute("mailingList")]
        public System.Collections.Generic.List<MailingList> MailingLists
        {
            get
            {
                return this._mailingLists;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MailingLists-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MailingLists collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MailingListsSpecified
        {
            get
            {
                return (this.MailingLists.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Describes the prerequisites in the build environment for this project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("prerequisites")]
        public Prerequisites Prerequisites { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _modules;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The modules (sometimes called subprojects) to build as a part of this
///            project. Each module listed is a relative path to the directory containing the module.
///            To be consistent with the way default urls are calculated from parent, it is recommended
///            to have module names match artifact ids.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("modules")]
        [System.Xml.Serialization.XmlArrayItemAttribute("module", DataType="string")]
        public System.Collections.Generic.List<string> Modules
        {
            get
            {
                return this._modules;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modules-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Modules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModulesSpecified
        {
            get
            {
                return (this.Modules.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Specification for the SCM used by the project, such as CVS, Subversion, etc.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("scm")]
        public Scm Scm { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The project's issue management system information.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("issueManagement")]
        public IssueManagement IssueManagement { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The project's continuous integration information.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ciManagement")]
        public CiManagement CiManagement { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Distribution information for a project that enables deployment of the site
///            and artifacts to remote web servers and repositories respectively.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distributionManagement")]
        public DistributionManagement DistributionManagement { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Properties that can be used throughout the POM as a substitution, and
///            are used as filters in resources if enabled.
///            The format is &lt;code&gt;&amp;lt;name&amp;gt;value&amp;lt;/name&amp;gt;&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public ModelProperties Properties { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Default dependency information for projects that inherit from this one. The
///            dependencies in this section are not immediately resolved. Instead, when a POM derived
///            from this one declares a dependency described by a matching groupId and artifactId, the
///            version and other values from this section are used for that dependency if they were not
///            already specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependencyManagement")]
        public DependencyManagement DependencyManagement { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependencies;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            This element describes all of the dependencies associated with a
///            project.
///            These dependencies are used to construct a classpath for your
///            project during the build process. They are automatically downloaded from the
///            repositories defined in this project.
///            See &lt;a href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html"&gt;the
///            dependency mechanism&lt;/a&gt; for more information.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("dependencies")]
        [System.Xml.Serialization.XmlArrayItemAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependencies
        {
            get
            {
                return this._dependencies;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependencies-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependencies collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependenciesSpecified
        {
            get
            {
                return (this.Dependencies.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _repositories;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The lists of the remote repositories for discovering dependencies and
///            extensions.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("repositories")]
        [System.Xml.Serialization.XmlArrayItemAttribute("repository")]
        public System.Collections.Generic.List<Repository> Repositories
        {
            get
            {
                return this._repositories;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Repositories-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Repositories collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepositoriesSpecified
        {
            get
            {
                return (this.Repositories.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _pluginRepositories;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The lists of the remote repositories for discovering plugins for builds and
///            reports.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("pluginRepositories")]
        [System.Xml.Serialization.XmlArrayItemAttribute("pluginRepository")]
        public System.Collections.Generic.List<Repository> PluginRepositories
        {
            get
            {
                return this._pluginRepositories;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PluginRepositories-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PluginRepositories collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginRepositoriesSpecified
        {
            get
            {
                return (this.PluginRepositories.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Information required to build the project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("build")]
        public Build Build { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            &lt;b&gt;Deprecated&lt;/b&gt;. Now ignored by Maven.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("reports")]
        public ModelReports Reports { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            This element includes the specification of report plugins to use
///            to generate the reports on the Maven-generated site.
///            These reports will be run when a user executes &lt;code&gt;mvn site&lt;/code&gt;.
///            All of the reports will be included in the navigation bar for browsing.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("reporting")]
        public Reporting Reporting { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Profile> _profiles;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>A listing of project-local build profiles which will modify the build process
///            when activated.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("profiles")]
        [System.Xml.Serialization.XmlArrayItemAttribute("profile")]
        public System.Collections.Generic.List<Profile> Profiles
        {
            get
            {
                return this._profiles;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Profiles-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Profiles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfilesSpecified
        {
            get
            {
                return (this.Profiles.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;parent&amp;gt;&lt;/code&gt; element contains information required to locate the parent project from which
///        this project will inherit from.
///        &lt;strong&gt;Note:&lt;/strong&gt; The children of this element are not interpolated and must be given as literal values.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Parent")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Parent
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The group id of the parent project to inherit from.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The artifact id of the parent project to inherit from.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The version of the parent project to inherit.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _relativePath = "../pom.xml";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The relative path of the parent &lt;code&gt;pom.xml&lt;/code&gt; file within the check out.
///            If not specified, it defaults to &lt;code&gt;../pom.xml&lt;/code&gt;.
///            Maven looks for the parent POM first in this location on
///            the filesystem, then the local repository, and lastly in the remote repo.
///            &lt;code&gt;relativePath&lt;/code&gt; allows you to select a different location,
///            for example when your structure is flat, or deeper without an intermediate parent POM.
///            However, the group ID, artifact ID and version are still required,
///            and must match the file in the location given or it will revert to the repository for the POM.
///            This feature is only for enhancing the development in a local checkout of that project.
///            Set the value to an empty string in case you want to disable the feature and always resolve
///            the parent POM from the repositories.
///            
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("../pom.xml")]
        [System.Xml.Serialization.XmlElementAttribute("relativePath", DataType="string")]
        public string RelativePath
        {
            get
            {
                return this._relativePath;
            }
            set
            {
                this._relativePath = value;
            }
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>Specifies the organization that produces this project.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Organization")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Organization
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The full name of the organization.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The URL to the organization's home page.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelLicenses", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelLicenses
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<License> _license;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("license")]
        public System.Collections.Generic.List<License> License
        {
            get
            {
                return this._license;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die License-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the License collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LicenseSpecified
        {
            get
            {
                return (this.License.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelLicenses" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelLicenses" /> class.</para>
        /// </summary>
        public ModelLicenses()
        {
            this._license = new System.Collections.Generic.List<License>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>Describes the licenses for this project. This is used to generate the license
///        page of the project's web site, as well as being taken into consideration in other reporting
///        and validation. The licenses listed for the project are that of the project itself, and not
///        of dependencies.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("License")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class License
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The full legal name of the license.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The official url for the license text.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The primary method by which this project may be distributed.
///            &lt;dl&gt;
///              &lt;dt&gt;repo&lt;/dt&gt;
///              &lt;dd&gt;may be downloaded from the Maven repository&lt;/dd&gt;
///              &lt;dt&gt;manual&lt;/dt&gt;
///              &lt;dd&gt;user must manually download and install the dependency.&lt;/dd&gt;
///            &lt;/dl&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distribution", DataType="string")]
        public string Distribution { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Addendum information pertaining to this license.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("comments", DataType="string")]
        public string Comments { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelDevelopers", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelDevelopers
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Developer> _developer;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("developer")]
        public System.Collections.Generic.List<Developer> Developer
        {
            get
            {
                return this._developer;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Developer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Developer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeveloperSpecified
        {
            get
            {
                return (this.Developer.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelDevelopers" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelDevelopers" /> class.</para>
        /// </summary>
        public ModelDevelopers()
        {
            this._developer = new System.Collections.Generic.List<Developer>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>Information about one of the committers on this project.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Developer")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Developer
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The unique ID of the developer in the SCM.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The full name of the contributor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The email address of the contributor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("email", DataType="string")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The URL for the homepage of the contributor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The organization to which the contributor belongs.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("organization", DataType="string")]
        public string Organization { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The URL of the organization.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("organizationUrl", DataType="string")]
        public string OrganizationUrl { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _roles;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The roles the contributor plays in the project. Each role is described by a
///            &lt;code&gt;role&lt;/code&gt; element, the body of which is a role name. This can also be used to
///            describe the contribution.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("roles")]
        [System.Xml.Serialization.XmlArrayItemAttribute("role", DataType="string")]
        public System.Collections.Generic.List<string> Roles
        {
            get
            {
                return this._roles;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Roles-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Roles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RolesSpecified
        {
            get
            {
                return (this.Roles.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Developer" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Developer" /> class.</para>
        /// </summary>
        public Developer()
        {
            this._roles = new System.Collections.Generic.List<string>();
        }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///              The timezone the contributor is in. Typically, this is a number in the range
///              &lt;a href="http://en.wikipedia.org/wiki/UTC%E2%88%9212:00"&gt;-12&lt;/a&gt; to &lt;a href="http://en.wikipedia.org/wiki/UTC%2B14:00"&gt;+14&lt;/a&gt;
///              or a valid time zone id like "America/Montreal" (UTC-05:00) or "Europe/Paris" (UTC+01:00).
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("timezone", DataType="string")]
        public string Timezone { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Properties about the contributor, such as an instant messenger handle.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public DeveloperProperties Properties { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DeveloperRoles", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DeveloperRoles
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _role;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("role", DataType="string")]
        public System.Collections.Generic.List<string> Role
        {
            get
            {
                return this._role;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Role-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Role collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoleSpecified
        {
            get
            {
                return (this.Role.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DeveloperRoles" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DeveloperRoles" /> class.</para>
        /// </summary>
        public DeveloperRoles()
        {
            this._role = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DeveloperProperties", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DeveloperProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DeveloperProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DeveloperProperties" /> class.</para>
        /// </summary>
        public DeveloperProperties()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelContributors", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelContributors
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Contributor> _contributor;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contributor")]
        public System.Collections.Generic.List<Contributor> Contributor
        {
            get
            {
                return this._contributor;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Contributor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Contributor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContributorSpecified
        {
            get
            {
                return (this.Contributor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelContributors" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelContributors" /> class.</para>
        /// </summary>
        public ModelContributors()
        {
            this._contributor = new System.Collections.Generic.List<Contributor>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>Description of a person who has contributed to the project, but who does not have
///        commit privileges. Usually, these contributions come in the form of patches submitted.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Contributor")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Contributor
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The full name of the contributor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The email address of the contributor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("email", DataType="string")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The URL for the homepage of the contributor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The organization to which the contributor belongs.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("organization", DataType="string")]
        public string Organization { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The URL of the organization.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("organizationUrl", DataType="string")]
        public string OrganizationUrl { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _roles;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The roles the contributor plays in the project. Each role is described by a
///            &lt;code&gt;role&lt;/code&gt; element, the body of which is a role name. This can also be used to
///            describe the contribution.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("roles")]
        [System.Xml.Serialization.XmlArrayItemAttribute("role", DataType="string")]
        public System.Collections.Generic.List<string> Roles
        {
            get
            {
                return this._roles;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Roles-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Roles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RolesSpecified
        {
            get
            {
                return (this.Roles.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Contributor" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Contributor" /> class.</para>
        /// </summary>
        public Contributor()
        {
            this._roles = new System.Collections.Generic.List<string>();
        }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///              The timezone the contributor is in. Typically, this is a number in the range
///              &lt;a href="http://en.wikipedia.org/wiki/UTC%E2%88%9212:00"&gt;-12&lt;/a&gt; to &lt;a href="http://en.wikipedia.org/wiki/UTC%2B14:00"&gt;+14&lt;/a&gt;
///              or a valid time zone id like "America/Montreal" (UTC-05:00) or "Europe/Paris" (UTC+01:00).
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("timezone", DataType="string")]
        public string Timezone { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Properties about the contributor, such as an instant messenger handle.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public ContributorProperties Properties { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ContributorRoles", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ContributorRoles
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _role;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("role", DataType="string")]
        public System.Collections.Generic.List<string> Role
        {
            get
            {
                return this._role;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Role-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Role collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoleSpecified
        {
            get
            {
                return (this.Role.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ContributorRoles" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ContributorRoles" /> class.</para>
        /// </summary>
        public ContributorRoles()
        {
            this._role = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ContributorProperties", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ContributorProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ContributorProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ContributorProperties" /> class.</para>
        /// </summary>
        public ContributorProperties()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelMailingLists", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelMailingLists
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MailingList> _mailingList;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("mailingList")]
        public System.Collections.Generic.List<MailingList> MailingList
        {
            get
            {
                return this._mailingList;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MailingList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MailingList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MailingListSpecified
        {
            get
            {
                return (this.MailingList.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelMailingLists" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelMailingLists" /> class.</para>
        /// </summary>
        public ModelMailingLists()
        {
            this._mailingList = new System.Collections.Generic.List<MailingList>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>This element describes all of the mailing lists associated with a project. The
///        auto-generated site references this information.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("MailingList")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class MailingList
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The name of the mailing list.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The email address or link that can be used to subscribe to
///            the mailing list.  If this is an email address, a
///            &lt;code&gt;mailto:&lt;/code&gt; link will automatically be created
///            when the documentation is created.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("subscribe", DataType="string")]
        public string Subscribe { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The email address or link that can be used to unsubscribe to
///            the mailing list.  If this is an email address, a
///            &lt;code&gt;mailto:&lt;/code&gt; link will automatically be created
///            when the documentation is created.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("unsubscribe", DataType="string")]
        public string Unsubscribe { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The email address or link that can be used to post to
///            the mailing list.  If this is an email address, a
///            &lt;code&gt;mailto:&lt;/code&gt; link will automatically be created
///            when the documentation is created.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("post", DataType="string")]
        public string Post { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The link to a URL where you can browse the mailing list archive.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("archive", DataType="string")]
        public string Archive { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _otherArchives;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The link to alternate URLs where you can browse the list archive.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("otherArchives")]
        [System.Xml.Serialization.XmlArrayItemAttribute("otherArchive", DataType="string")]
        public System.Collections.Generic.List<string> OtherArchives
        {
            get
            {
                return this._otherArchives;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OtherArchives-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OtherArchives collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherArchivesSpecified
        {
            get
            {
                return (this.OtherArchives.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MailingList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MailingList" /> class.</para>
        /// </summary>
        public MailingList()
        {
            this._otherArchives = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("MailingListOtherArchives", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class MailingListOtherArchives
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _otherArchive;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("otherArchive", DataType="string")]
        public System.Collections.Generic.List<string> OtherArchive
        {
            get
            {
                return this._otherArchive;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OtherArchive-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OtherArchive collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherArchiveSpecified
        {
            get
            {
                return (this.OtherArchive.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MailingListOtherArchives" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MailingListOtherArchives" /> class.</para>
        /// </summary>
        public MailingListOtherArchives()
        {
            this._otherArchive = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Describes the prerequisites a project can have.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Prerequisites")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Prerequisites
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _maven = "2.0";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            For a plugin project, the minimum version of Maven required to use
///            the resulting plugin.&lt;br /&gt;
///            For specifying the minimum version of Maven required to build a
///            project, this element is &lt;b&gt;deprecated&lt;/b&gt;. Use the Maven Enforcer
///            Plugin's &lt;a href="https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html"&gt;&lt;code&gt;requireMavenVersion&lt;/code&gt;&lt;/a&gt;
///            rule instead.
///            
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("2.0")]
        [System.Xml.Serialization.XmlElementAttribute("maven", DataType="string")]
        public string Maven
        {
            get
            {
                return this._maven;
            }
            set
            {
                this._maven = value;
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelModules", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelModules
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _module;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("module", DataType="string")]
        public System.Collections.Generic.List<string> Module
        {
            get
            {
                return this._module;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Module-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Module collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModuleSpecified
        {
            get
            {
                return (this.Module.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelModules" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelModules" /> class.</para>
        /// </summary>
        public ModelModules()
        {
            this._module = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;scm&amp;gt;&lt;/code&gt; element contains informations required to the SCM
///        (Source Control Management) of the project.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Scm")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Scm
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The source control management system URL
///            that describes the repository and how to connect to the
///            repository. For more information, see the
///            &lt;a href="http://maven.apache.org/scm/scm-url-format.html"&gt;URL format&lt;/a&gt;
///            and &lt;a href="http://maven.apache.org/scm/scms-overview.html"&gt;list of supported SCMs&lt;/a&gt;.
///            This connection is read-only.
///            &lt;br /&gt;&lt;b&gt;Default value is&lt;/b&gt;: parent value [+ path adjustment] + artifactId
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("connection", DataType="string")]
        public string Connection { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Just like &lt;code&gt;connection&lt;/code&gt;, but for developers, i.e. this scm connection
///            will not be read only.
///            &lt;br /&gt;&lt;b&gt;Default value is&lt;/b&gt;: parent value [+ path adjustment] + artifactId
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("developerConnection", DataType="string")]
        public string DeveloperConnection { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _tag = "HEAD";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The tag of current code. By default, it's set to HEAD during development.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("HEAD")]
        [System.Xml.Serialization.XmlElementAttribute("tag", DataType="string")]
        public string Tag
        {
            get
            {
                return this._tag;
            }
            set
            {
                this._tag = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The URL to the project's browsable SCM repository, such as ViewVC or Fisheye.
///            &lt;br /&gt;&lt;b&gt;Default value is&lt;/b&gt;: parent value [+ path adjustment] + artifactId
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Information about the issue tracking (or bug tracking) system used to manage this
///        project.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("IssueManagement")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class IssueManagement
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The name of the issue management system, e.g. Bugzilla</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("system", DataType="string")]
        public string System { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>URL for the issue management system used by the project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;CiManagement&amp;gt;&lt;/code&gt; element contains informations required to the
///        continuous integration system of the project.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("CiManagement")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class CiManagement
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The name of the continuous integration system, e.g. &lt;code&gt;continuum&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("system", DataType="string")]
        public string System { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>URL for the continuous integration system used by the project if it has a web
///            interface.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Notifier> _notifiers;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Configuration for notifying developers/users when a build is unsuccessful,
///            including user information and notification mode.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("notifiers")]
        [System.Xml.Serialization.XmlArrayItemAttribute("notifier")]
        public System.Collections.Generic.List<Notifier> Notifiers
        {
            get
            {
                return this._notifiers;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Notifiers-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Notifiers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotifiersSpecified
        {
            get
            {
                return (this.Notifiers.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CiManagement" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CiManagement" /> class.</para>
        /// </summary>
        public CiManagement()
        {
            this._notifiers = new System.Collections.Generic.List<Notifier>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("CiManagementNotifiers", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class CiManagementNotifiers
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Notifier> _notifier;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("notifier")]
        public System.Collections.Generic.List<Notifier> Notifier
        {
            get
            {
                return this._notifier;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Notifier-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Notifier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotifierSpecified
        {
            get
            {
                return (this.Notifier.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CiManagementNotifiers" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CiManagementNotifiers" /> class.</para>
        /// </summary>
        public CiManagementNotifiers()
        {
            this._notifier = new System.Collections.Generic.List<Notifier>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Configures one method for notifying users/developers when a build breaks.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Notifier")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Notifier
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _type = "mail";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The mechanism used to deliver notifications.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("mail")]
        [System.Xml.Serialization.XmlElementAttribute("type", DataType="string")]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _sendOnError = true;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Whether to send notifications on error.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Xml.Serialization.XmlElementAttribute("sendOnError", DataType="boolean")]
        public bool SendOnError
        {
            get
            {
                return this._sendOnError;
            }
            set
            {
                this._sendOnError = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _sendOnFailure = true;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Whether to send notifications on failure.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Xml.Serialization.XmlElementAttribute("sendOnFailure", DataType="boolean")]
        public bool SendOnFailure
        {
            get
            {
                return this._sendOnFailure;
            }
            set
            {
                this._sendOnFailure = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _sendOnSuccess = true;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Whether to send notifications on success.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Xml.Serialization.XmlElementAttribute("sendOnSuccess", DataType="boolean")]
        public bool SendOnSuccess
        {
            get
            {
                return this._sendOnSuccess;
            }
            set
            {
                this._sendOnSuccess = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _sendOnWarning = true;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Whether to send notifications on warning.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Xml.Serialization.XmlElementAttribute("sendOnWarning", DataType="boolean")]
        public bool SendOnWarning
        {
            get
            {
                return this._sendOnWarning;
            }
            set
            {
                this._sendOnWarning = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            &lt;b&gt;Deprecated&lt;/b&gt;. Where to send the notification to - eg email address.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", DataType="string")]
        public string Address { get; set; }
        
        /// <summary>
        /// <para>0.0.0+</para>
        /// <para>Extended configuration specific to this notifier goes here.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("configuration")]
        public NotifierConfiguration Configuration { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("NotifierConfiguration", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class NotifierConfiguration
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="NotifierConfiguration" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NotifierConfiguration" /> class.</para>
        /// </summary>
        public NotifierConfiguration()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>This elements describes all that pertains to distribution for a project. It is
///        primarily used for deployment of artifacts and the site produced by the build.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DistributionManagement")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DistributionManagement
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Information needed to deploy the artifacts generated by the project to a
///            remote repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("repository")]
        public DeploymentRepository Repository { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Where to deploy snapshots of artifacts to. If not given, it defaults to the
///            &lt;code&gt;repository&lt;/code&gt; element.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("snapshotRepository")]
        public DeploymentRepository SnapshotRepository { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Information needed for deploying the web site of the project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("site")]
        public Site Site { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The URL of the project's download page. If not given users will be
///            referred to the homepage given by &lt;code&gt;url&lt;/code&gt;.
///            This is given to assist in locating artifacts that are not in the repository due to
///            licensing restrictions.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("downloadUrl", DataType="string")]
        public string DownloadUrl { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Relocation information of the artifact if it has been moved to a new group ID
///            and/or artifact ID.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("relocation")]
        public Relocation Relocation { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Gives the status of this artifact in the remote repository.
///            This must not be set in your local project, as it is updated by
///            tools placing it in the reposiory. Valid values are: &lt;code&gt;none&lt;/code&gt; (default),
///            &lt;code&gt;converted&lt;/code&gt; (repository manager converted this from an Maven 1 POM),
///            &lt;code&gt;partner&lt;/code&gt;
///            (directly synced from a partner Maven 2 repository), &lt;code&gt;deployed&lt;/code&gt; (was deployed from a Maven 2
///            instance), &lt;code&gt;verified&lt;/code&gt; (has been hand verified as correct and final).
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("status", DataType="string")]
        public string Status { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Repository contains the information needed for deploying to the remote
///        repository.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DeploymentRepository")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DeploymentRepository
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _uniqueVersion = true;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Whether to assign snapshots a unique version comprised of the timestamp and
///            build number, or to use the same version each time</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Xml.Serialization.XmlElementAttribute("uniqueVersion", DataType="boolean")]
        public bool UniqueVersion
        {
            get
            {
                return this._uniqueVersion;
            }
            set
            {
                this._uniqueVersion = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>How to handle downloading of releases from this repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("releases")]
        public RepositoryPolicy Releases { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>How to handle downloading of snapshots from this repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("snapshots")]
        public RepositoryPolicy Snapshots { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            A unique identifier for a repository. This is used to match the repository
///            to configuration in the &lt;code&gt;settings.xml&lt;/code&gt; file, for example. Furthermore, the identifier is
///            used during POM inheritance and profile injection to detect repositories that should be merged.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Human readable name of the repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The url of the repository, in the form &lt;code&gt;protocol://hostname/path&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _layout = "default";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The type of layout this repository uses for locating and storing artifacts -
///            can be &lt;code&gt;legacy&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("default")]
        [System.Xml.Serialization.XmlElementAttribute("layout", DataType="string")]
        public string Layout
        {
            get
            {
                return this._layout;
            }
            set
            {
                this._layout = value;
            }
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Download policy.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("RepositoryPolicy")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RepositoryPolicy
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Whether to use this repository for downloading this type of artifact. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;true&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("enabled", DataType="string")]
        public string Enabled { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The frequency for downloading updates - can be
///            &lt;code&gt;always,&lt;/code&gt;
///            &lt;code&gt;daily&lt;/code&gt;
///            (default),
///            &lt;code&gt;interval:XXX&lt;/code&gt;
///            (in minutes) or
///            &lt;code&gt;never&lt;/code&gt;
///            (only if it doesn't exist locally).
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("updatePolicy", DataType="string")]
        public string UpdatePolicy { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            What to do when verification of an artifact checksum fails. Valid values are
///            &lt;code&gt;ignore&lt;/code&gt;
///            ,
///            &lt;code&gt;fail&lt;/code&gt;
///            or
///            &lt;code&gt;warn&lt;/code&gt;
///            (the default).
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("checksumPolicy", DataType="string")]
        public string ChecksumPolicy { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Contains the information needed for deploying websites.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Site")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Site
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            A unique identifier for a deployment location. This is used to match the
///            site to configuration in the &lt;code&gt;settings.xml&lt;/code&gt; file, for example.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Human readable name of the deployment location.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The url of the location where website is deployed, in the form &lt;code&gt;protocol://hostname/path&lt;/code&gt;.
///            &lt;br /&gt;&lt;b&gt;Default value is&lt;/b&gt;: parent value [+ path adjustment] + artifactId
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Describes where an artifact has moved to. If any of the values are omitted, it is
///        assumed to be the same as it was before.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Relocation")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Relocation
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The group ID the artifact has moved to.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The new artifact ID of the artifact.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The new version of the artifact.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>An additional message to show the user about the move, such as the reason.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("message", DataType="string")]
        public string Message { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelProperties", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelProperties" /> class.</para>
        /// </summary>
        public ModelProperties()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Section for management of default dependency information for use in a group of
///        POMs.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DependencyManagement")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DependencyManagement
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependencies;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The dependencies specified here are not used until they are referenced in a
///            POM within the group. This allows the specification of a "standard" version for a
///            particular dependency.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("dependencies")]
        [System.Xml.Serialization.XmlArrayItemAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependencies
        {
            get
            {
                return this._dependencies;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependencies-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependencies collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependenciesSpecified
        {
            get
            {
                return (this.Dependencies.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DependencyManagement" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DependencyManagement" /> class.</para>
        /// </summary>
        public DependencyManagement()
        {
            this._dependencies = new System.Collections.Generic.List<Dependency>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DependencyManagementDependencies", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DependencyManagementDependencies
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependency;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependency
        {
            get
            {
                return this._dependency;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependency-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependencySpecified
        {
            get
            {
                return (this.Dependency.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DependencyManagementDependencies" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DependencyManagementDependencies" /> class.</para>
        /// </summary>
        public DependencyManagementDependencies()
        {
            this._dependency = new System.Collections.Generic.List<Dependency>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;dependency&amp;gt;&lt;/code&gt; element contains information about a dependency
///        of the project.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Dependency")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Dependency
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The project group that produced the dependency, e.g.
///            &lt;code&gt;org.apache.maven&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The unique id for an artifact produced by the project group, e.g.
///            &lt;code&gt;maven-artifact&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            The version of the dependency, e.g. &lt;code&gt;3.2.1&lt;/code&gt;. In Maven 2, this can also be
///            specified as a range of versions.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _type = "jar";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The type of dependency. While it
///            usually represents the extension on the filename of the dependency,
///            that is not always the case. A type can be mapped to a different
///            extension and a classifier.
///            The type often corresponds to the packaging used, though this is also
///            not always the case.
///            Some examples are &lt;code&gt;jar&lt;/code&gt;, &lt;code&gt;war&lt;/code&gt;, &lt;code&gt;ejb-client&lt;/code&gt;
///            and &lt;code&gt;test-jar&lt;/code&gt;: see &lt;a href="../maven-core/artifact-handlers.html"&gt;default
///            artifact handlers&lt;/a&gt; for a list.
///            New types can be defined by plugins that set
///            &lt;code&gt;extensions&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, so this is not a complete list.
///            
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("jar")]
        [System.Xml.Serialization.XmlElementAttribute("type", DataType="string")]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The classifier of the dependency. It is appended to
///            the filename after the version. This allows:
///            &lt;ul&gt;
///            &lt;li&gt;refering to attached artifact, for example &lt;code&gt;sources&lt;/code&gt; and &lt;code&gt;javadoc&lt;/code&gt;:
///            see &lt;a href="../maven-core/artifact-handlers.html"&gt;default artifact handlers&lt;/a&gt; for a list,&lt;/li&gt;
///            &lt;li&gt;distinguishing two artifacts
///            that belong to the same POM but were built differently.
///            For example, &lt;code&gt;jdk14&lt;/code&gt; and &lt;code&gt;jdk15&lt;/code&gt;.&lt;/li&gt;
///            &lt;/ul&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("classifier", DataType="string")]
        public string Classifier { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The scope of the dependency - &lt;code&gt;compile&lt;/code&gt;, &lt;code&gt;runtime&lt;/code&gt;,
///            &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;system&lt;/code&gt;, and &lt;code&gt;provided&lt;/code&gt;. Used to
///            calculate the various classpaths used for compilation, testing, and so on.
///            It also assists in determining which artifacts to include in a distribution of
///            this project. For more information, see
///            &lt;a href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html"&gt;the
///            dependency mechanism&lt;/a&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("scope", DataType="string")]
        public string Scope { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            FOR SYSTEM SCOPE ONLY. Note that use of this property is &lt;b&gt;discouraged&lt;/b&gt;
///            and may be replaced in later versions. This specifies the path on the filesystem
///            for this dependency.
///            Requires an absolute path for the value, not relative.
///            Use a property that gives the machine specific absolute path,
///            e.g. &lt;code&gt;${java.home}&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("systemPath", DataType="string")]
        public string SystemPath { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Exclusion> _exclusions;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Lists a set of artifacts that should be excluded from this dependency's
///            artifact list when it comes to calculating transitive dependencies.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("exclusions")]
        [System.Xml.Serialization.XmlArrayItemAttribute("exclusion")]
        public System.Collections.Generic.List<Exclusion> Exclusions
        {
            get
            {
                return this._exclusions;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Exclusions-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Exclusions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExclusionsSpecified
        {
            get
            {
                return (this.Exclusions.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Dependency" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Dependency" /> class.</para>
        /// </summary>
        public Dependency()
        {
            this._exclusions = new System.Collections.Generic.List<Exclusion>();
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Indicates the dependency is optional for use of this library. While the
///            version of the dependency will be taken into account for dependency calculation if the
///            library is used elsewhere, it will not be passed on transitively. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;false&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("optional", DataType="string")]
        public string Optional { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("DependencyExclusions", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DependencyExclusions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Exclusion> _exclusion;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("exclusion")]
        public System.Collections.Generic.List<Exclusion> Exclusion
        {
            get
            {
                return this._exclusion;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Exclusion-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Exclusion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExclusionSpecified
        {
            get
            {
                return (this.Exclusion.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DependencyExclusions" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DependencyExclusions" /> class.</para>
        /// </summary>
        public DependencyExclusions()
        {
            this._exclusion = new System.Collections.Generic.List<Exclusion>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;exclusion&amp;gt;&lt;/code&gt; element contains informations required to exclude
///        an artifact to the project.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Exclusion")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Exclusion
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The artifact ID of the project to exclude.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The group ID of the project to exclude.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelDependencies", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelDependencies
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependency;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependency
        {
            get
            {
                return this._dependency;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependency-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependencySpecified
        {
            get
            {
                return (this.Dependency.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelDependencies" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelDependencies" /> class.</para>
        /// </summary>
        public ModelDependencies()
        {
            this._dependency = new System.Collections.Generic.List<Dependency>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelRepositories", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelRepositories
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _repository;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("repository")]
        public System.Collections.Generic.List<Repository> Repository
        {
            get
            {
                return this._repository;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Repository-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Repository collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepositorySpecified
        {
            get
            {
                return (this.Repository.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelRepositories" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelRepositories" /> class.</para>
        /// </summary>
        public ModelRepositories()
        {
            this._repository = new System.Collections.Generic.List<Repository>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>A repository contains the information needed for establishing connections with
///        remote repository.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Repository")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Repository
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>How to handle downloading of releases from this repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("releases")]
        public RepositoryPolicy Releases { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>How to handle downloading of snapshots from this repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("snapshots")]
        public RepositoryPolicy Snapshots { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            A unique identifier for a repository. This is used to match the repository
///            to configuration in the &lt;code&gt;settings.xml&lt;/code&gt; file, for example. Furthermore, the identifier is
///            used during POM inheritance and profile injection to detect repositories that should be merged.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Human readable name of the repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The url of the repository, in the form &lt;code&gt;protocol://hostname/path&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", DataType="string")]
        public string Url { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _layout = "default";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The type of layout this repository uses for locating and storing artifacts -
///            can be &lt;code&gt;legacy&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("default")]
        [System.Xml.Serialization.XmlElementAttribute("layout", DataType="string")]
        public string Layout
        {
            get
            {
                return this._layout;
            }
            set
            {
                this._layout = value;
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelPluginRepositories", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelPluginRepositories
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _pluginRepository;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("pluginRepository")]
        public System.Collections.Generic.List<Repository> PluginRepository
        {
            get
            {
                return this._pluginRepository;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PluginRepository-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PluginRepository collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginRepositorySpecified
        {
            get
            {
                return (this.PluginRepository.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelPluginRepositories" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelPluginRepositories" /> class.</para>
        /// </summary>
        public ModelPluginRepositories()
        {
            this._pluginRepository = new System.Collections.Generic.List<Repository>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;build&amp;gt;&lt;/code&gt; element contains informations required to build the project.
///        Default values are defined in Super POM.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Build")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Build
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            This element specifies a directory containing the source of the project. The
///            generated build system will compile the sources from this directory when the project is
///            built. The path given is relative to the project descriptor.
///            The default value is &lt;code&gt;src/main/java&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("sourceDirectory", DataType="string")]
        public string SourceDirectory { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            This element specifies a directory containing the script sources of the
///            project. This directory is meant to be different from the sourceDirectory, in that its
///            contents will be copied to the output directory in most cases (since scripts are
///            interpreted rather than compiled).
///            The default value is &lt;code&gt;src/main/scripts&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("scriptSourceDirectory", DataType="string")]
        public string ScriptSourceDirectory { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            This element specifies a directory containing the unit test source of the
///            project. The generated build system will compile these directories when the project is
///            being tested. The path given is relative to the project descriptor.
///            The default value is &lt;code&gt;src/test/java&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("testSourceDirectory", DataType="string")]
        public string TestSourceDirectory { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            The directory where compiled application classes are placed.
///            The default value is &lt;code&gt;target/classes&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("outputDirectory", DataType="string")]
        public string OutputDirectory { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            The directory where compiled test classes are placed.
///            The default value is &lt;code&gt;target/test-classes&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("testOutputDirectory", DataType="string")]
        public string TestOutputDirectory { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Extension> _extensions;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>A set of build extensions to use from this project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("extensions")]
        [System.Xml.Serialization.XmlArrayItemAttribute("extension")]
        public System.Collections.Generic.List<Extension> Extensions
        {
            get
            {
                return this._extensions;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extensions-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extensions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionsSpecified
        {
            get
            {
                return (this.Extensions.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Build" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Build" /> class.</para>
        /// </summary>
        public Build()
        {
            this._extensions = new System.Collections.Generic.List<Extension>();
            this._resources = new System.Collections.Generic.List<Resource>();
            this._testResources = new System.Collections.Generic.List<Resource>();
            this._filters = new System.Collections.Generic.List<string>();
            this._plugins = new System.Collections.Generic.List<Plugin>();
        }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The default goal (or phase in Maven 2) to execute when none is specified for
///            the project. Note that in case of a multi-module build, only the default goal of the top-level
///            project is relevant, i.e. the default goals of child modules are ignored. Since Maven 3,
///            multiple goals/phases can be separated by whitespace.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("defaultGoal", DataType="string")]
        public string DefaultGoal { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _resources;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            This element describes all of the classpath resources such as properties
///            files associated with a project. These resources are often included in the final
///            package.
///            The default value is &lt;code&gt;src/main/resources&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("resources")]
        [System.Xml.Serialization.XmlArrayItemAttribute("resource")]
        public System.Collections.Generic.List<Resource> Resources
        {
            get
            {
                return this._resources;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Resources-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Resources collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResourcesSpecified
        {
            get
            {
                return (this.Resources.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _testResources;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            This element describes all of the classpath resources such as properties
///            files associated with a project's unit tests.
///            The default value is &lt;code&gt;src/test/resources&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("testResources")]
        [System.Xml.Serialization.XmlArrayItemAttribute("testResource")]
        public System.Collections.Generic.List<Resource> TestResources
        {
            get
            {
                return this._testResources;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TestResources-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TestResources collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestResourcesSpecified
        {
            get
            {
                return (this.TestResources.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            The directory where all files generated by the build are placed.
///            The default value is &lt;code&gt;target&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("directory", DataType="string")]
        public string Directory { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The filename (excluding the extension, and with no path information) that
///            the produced artifact will be called.
///            The default value is &lt;code&gt;${artifactId}-${version}&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("finalName", DataType="string")]
        public string FinalName { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _filters;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The list of filter properties files that are used when filtering is enabled.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("filters")]
        [System.Xml.Serialization.XmlArrayItemAttribute("filter", DataType="string")]
        public System.Collections.Generic.List<string> Filters
        {
            get
            {
                return this._filters;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filters-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Default plugin information to be made available for reference by projects
///            derived from this one. This plugin configuration will not be resolved or bound to the
///            lifecycle unless referenced. Any local configuration for a given plugin will override
///            the plugin's entire definition here.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("pluginManagement")]
        public PluginManagement PluginManagement { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Plugin> _plugins;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The list of plugins to use.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("plugins")]
        [System.Xml.Serialization.XmlArrayItemAttribute("plugin")]
        public System.Collections.Generic.List<Plugin> Plugins
        {
            get
            {
                return this._plugins;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugins-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugins collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginsSpecified
        {
            get
            {
                return (this.Plugins.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildExtensions", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildExtensions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Extension> _extension;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.Generic.List<Extension> Extension
        {
            get
            {
                return this._extension;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildExtensions" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildExtensions" /> class.</para>
        /// </summary>
        public BuildExtensions()
        {
            this._extension = new System.Collections.Generic.List<Extension>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Describes a build extension to utilise.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Extension")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Extension
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The group ID of the extension's artifact.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The artifact ID of the extension.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The version of the extension.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildResources", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildResources
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _resource;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("resource")]
        public System.Collections.Generic.List<Resource> Resource
        {
            get
            {
                return this._resource;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Resource-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Resource collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResourceSpecified
        {
            get
            {
                return (this.Resource.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildResources" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildResources" /> class.</para>
        /// </summary>
        public BuildResources()
        {
            this._resource = new System.Collections.Generic.List<Resource>();
        }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>This element describes all of the classpath resources associated with a project
///        or unit tests.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Resource")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Resource
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            Describe the resource target path. The path is relative to the target/classes
///            directory (i.e. &lt;code&gt;${project.build.outputDirectory}&lt;/code&gt;).
///            For example, if you want that resource to appear in a specific package
///            (&lt;code&gt;org.apache.maven.messages&lt;/code&gt;), you must specify this
///            element with this value: &lt;code&gt;org/apache/maven/messages&lt;/code&gt;.
///            This is not required if you simply put the resources in that directory
///            structure at the source, however.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("targetPath", DataType="string")]
        public string TargetPath { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            Whether resources are filtered to replace tokens with parameterised values or not.
///            The values are taken from the &lt;code&gt;properties&lt;/code&gt; element and from the
///            properties in the files listed in the &lt;code&gt;filters&lt;/code&gt; element. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;false&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("filtering", DataType="string")]
        public string Filtering { get; set; }
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>Describe the directory where the resources are stored. The path is relative
///            to the POM.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("directory", DataType="string")]
        public string Directory { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _includes;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            A list of patterns to include, e.g. &lt;code&gt;**&amp;#47;*.xml&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("includes")]
        [System.Xml.Serialization.XmlArrayItemAttribute("include", DataType="string")]
        public System.Collections.Generic.List<string> Includes
        {
            get
            {
                return this._includes;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Includes-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Includes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludesSpecified
        {
            get
            {
                return (this.Includes.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Resource" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Resource" /> class.</para>
        /// </summary>
        public Resource()
        {
            this._includes = new System.Collections.Generic.List<string>();
            this._excludes = new System.Collections.Generic.List<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _excludes;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            A list of patterns to exclude, e.g. &lt;code&gt;**&amp;#47;*.xml&lt;/code&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("excludes")]
        [System.Xml.Serialization.XmlArrayItemAttribute("exclude", DataType="string")]
        public System.Collections.Generic.List<string> Excludes
        {
            get
            {
                return this._excludes;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Excludes-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Excludes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcludesSpecified
        {
            get
            {
                return (this.Excludes.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ResourceIncludes", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ResourceIncludes
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _include;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("include", DataType="string")]
        public System.Collections.Generic.List<string> Include
        {
            get
            {
                return this._include;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Include-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Include collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeSpecified
        {
            get
            {
                return (this.Include.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ResourceIncludes" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ResourceIncludes" /> class.</para>
        /// </summary>
        public ResourceIncludes()
        {
            this._include = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ResourceExcludes", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ResourceExcludes
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _exclude;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("exclude", DataType="string")]
        public System.Collections.Generic.List<string> Exclude
        {
            get
            {
                return this._exclude;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Exclude-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Exclude collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcludeSpecified
        {
            get
            {
                return (this.Exclude.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ResourceExcludes" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ResourceExcludes" /> class.</para>
        /// </summary>
        public ResourceExcludes()
        {
            this._exclude = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildTestResources", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildTestResources
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _testResource;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("testResource")]
        public System.Collections.Generic.List<Resource> TestResource
        {
            get
            {
                return this._testResource;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TestResource-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TestResource collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestResourceSpecified
        {
            get
            {
                return (this.TestResource.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildTestResources" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildTestResources" /> class.</para>
        /// </summary>
        public BuildTestResources()
        {
            this._testResource = new System.Collections.Generic.List<Resource>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildFilters", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildFilters
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _filter;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("filter", DataType="string")]
        public System.Collections.Generic.List<string> Filter
        {
            get
            {
                return this._filter;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filter-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Filter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilterSpecified
        {
            get
            {
                return (this.Filter.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildFilters" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildFilters" /> class.</para>
        /// </summary>
        public BuildFilters()
        {
            this._filter = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Section for management of default plugin information for use in a group of POMs.
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginManagement")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginManagement
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Plugin> _plugins;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The list of plugins to use.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("plugins")]
        [System.Xml.Serialization.XmlArrayItemAttribute("plugin")]
        public System.Collections.Generic.List<Plugin> Plugins
        {
            get
            {
                return this._plugins;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugins-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugins collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginsSpecified
        {
            get
            {
                return (this.Plugins.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginManagement" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginManagement" /> class.</para>
        /// </summary>
        public PluginManagement()
        {
            this._plugins = new System.Collections.Generic.List<Plugin>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginManagementPlugins", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginManagementPlugins
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Plugin> _plugin;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plugin")]
        public System.Collections.Generic.List<Plugin> Plugin
        {
            get
            {
                return this._plugin;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginSpecified
        {
            get
            {
                return (this.Plugin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginManagementPlugins" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginManagementPlugins" /> class.</para>
        /// </summary>
        public PluginManagementPlugins()
        {
            this._plugin = new System.Collections.Generic.List<Plugin>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;plugin&amp;gt;&lt;/code&gt; element contains informations required for a plugin.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Plugin")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Plugin
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _groupId = "org.apache.maven.plugins";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The group ID of the plugin in the repository.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("org.apache.maven.plugins")]
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId
        {
            get
            {
                return this._groupId;
            }
            set
            {
                this._groupId = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The artifact ID of the plugin in the repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The version (or valid range of versions) of the plugin to be used.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Whether to load Maven extensions (such as packaging and type handlers) from
///            this plugin. For performance reasons, this should only be enabled when necessary. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;false&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("extensions", DataType="string")]
        public string Extensions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PluginExecution> _executions;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Multiple specifications of a set of goals to execute during the build
///            lifecycle, each having (possibly) a different configuration.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("executions")]
        [System.Xml.Serialization.XmlArrayItemAttribute("execution")]
        public System.Collections.Generic.List<PluginExecution> Executions
        {
            get
            {
                return this._executions;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Executions-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Executions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExecutionsSpecified
        {
            get
            {
                return (this.Executions.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Plugin" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Plugin" /> class.</para>
        /// </summary>
        public Plugin()
        {
            this._executions = new System.Collections.Generic.List<PluginExecution>();
            this._dependencies = new System.Collections.Generic.List<Dependency>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependencies;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Additional dependencies that this project needs to introduce to the plugin's
///            classloader.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("dependencies")]
        [System.Xml.Serialization.XmlArrayItemAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependencies
        {
            get
            {
                return this._dependencies;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependencies-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependencies collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependenciesSpecified
        {
            get
            {
                return (this.Dependencies.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            &lt;b&gt;Deprecated&lt;/b&gt;. Unused by Maven.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("goals")]
        public PluginGoals Goals { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Whether any configuration should be propagated to child POMs. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;true&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("inherited", DataType="string")]
        public string Inherited { get; set; }
        
        /// <summary>
        /// <para>0.0.0+</para>
        /// <para>
///            
///            &lt;p&gt;The configuration as DOM object.&lt;/p&gt;
///            &lt;p&gt;By default, every element content is trimmed, but starting with Maven 3.1.0, you can add
///            &lt;code&gt;xml:space="preserve"&lt;/code&gt; to elements you want to preserve whitespace.&lt;/p&gt;
///            &lt;p&gt;You can control how child POMs inherit configuration from parent POMs by adding &lt;code&gt;combine.children&lt;/code&gt;
///            or &lt;code&gt;combine.self&lt;/code&gt; attributes to the children of the configuration element:&lt;/p&gt;
///            &lt;ul&gt;
///            &lt;li&gt;&lt;code&gt;combine.children&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;append&lt;/code&gt;,&lt;/li&gt;
///            &lt;li&gt;&lt;code&gt;combine.self&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;override&lt;/code&gt;.&lt;/li&gt;
///            &lt;/ul&gt;
///            &lt;p&gt;See &lt;a href="http://maven.apache.org/pom.html#Plugins"&gt;POM Reference documentation&lt;/a&gt; and
///            &lt;a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3DomUtils.html"&gt;Xpp3DomUtils&lt;/a&gt;
///            for more information.&lt;/p&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("configuration")]
        public PluginConfiguration Configuration { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginExecutions", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginExecutions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PluginExecution> _execution;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("execution")]
        public System.Collections.Generic.List<PluginExecution> Execution
        {
            get
            {
                return this._execution;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Execution-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Execution collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExecutionSpecified
        {
            get
            {
                return (this.Execution.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginExecutions" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginExecutions" /> class.</para>
        /// </summary>
        public PluginExecutions()
        {
            this._execution = new System.Collections.Generic.List<PluginExecution>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;execution&amp;gt;&lt;/code&gt; element contains informations required for the
///        execution of a plugin.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginExecution")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginExecution
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _id = "default";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The identifier of this execution for labelling the goals during the build,
///            and for matching executions to merge during inheritance and profile injection.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("default")]
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The build lifecycle phase to bind the goals in this execution to. If omitted,
///            the goals will be bound to the default phase specified by the plugin. </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("phase", DataType="string")]
        public string Phase { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _goals;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The goals to execute with the given configuration.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("goals")]
        [System.Xml.Serialization.XmlArrayItemAttribute("goal", DataType="string")]
        public System.Collections.Generic.List<string> Goals
        {
            get
            {
                return this._goals;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Goals-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Goals collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoalsSpecified
        {
            get
            {
                return (this.Goals.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginExecution" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginExecution" /> class.</para>
        /// </summary>
        public PluginExecution()
        {
            this._goals = new System.Collections.Generic.List<string>();
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Whether any configuration should be propagated to child POMs. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;true&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("inherited", DataType="string")]
        public string Inherited { get; set; }
        
        /// <summary>
        /// <para>0.0.0+</para>
        /// <para>
///            
///            &lt;p&gt;The configuration as DOM object.&lt;/p&gt;
///            &lt;p&gt;By default, every element content is trimmed, but starting with Maven 3.1.0, you can add
///            &lt;code&gt;xml:space="preserve"&lt;/code&gt; to elements you want to preserve whitespace.&lt;/p&gt;
///            &lt;p&gt;You can control how child POMs inherit configuration from parent POMs by adding &lt;code&gt;combine.children&lt;/code&gt;
///            or &lt;code&gt;combine.self&lt;/code&gt; attributes to the children of the configuration element:&lt;/p&gt;
///            &lt;ul&gt;
///            &lt;li&gt;&lt;code&gt;combine.children&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;append&lt;/code&gt;,&lt;/li&gt;
///            &lt;li&gt;&lt;code&gt;combine.self&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;override&lt;/code&gt;.&lt;/li&gt;
///            &lt;/ul&gt;
///            &lt;p&gt;See &lt;a href="http://maven.apache.org/pom.html#Plugins"&gt;POM Reference documentation&lt;/a&gt; and
///            &lt;a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3DomUtils.html"&gt;Xpp3DomUtils&lt;/a&gt;
///            for more information.&lt;/p&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("configuration")]
        public PluginExecutionConfiguration Configuration { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginExecutionGoals", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginExecutionGoals
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _goal;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("goal", DataType="string")]
        public System.Collections.Generic.List<string> Goal
        {
            get
            {
                return this._goal;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Goal-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Goal collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoalSpecified
        {
            get
            {
                return (this.Goal.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginExecutionGoals" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginExecutionGoals" /> class.</para>
        /// </summary>
        public PluginExecutionGoals()
        {
            this._goal = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginExecutionConfiguration", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginExecutionConfiguration
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginExecutionConfiguration" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginExecutionConfiguration" /> class.</para>
        /// </summary>
        public PluginExecutionConfiguration()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginDependencies", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginDependencies
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependency;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependency
        {
            get
            {
                return this._dependency;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependency-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependencySpecified
        {
            get
            {
                return (this.Dependency.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginDependencies" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginDependencies" /> class.</para>
        /// </summary>
        public PluginDependencies()
        {
            this._dependency = new System.Collections.Generic.List<Dependency>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginGoals", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginGoals
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginGoals" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginGoals" /> class.</para>
        /// </summary>
        public PluginGoals()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("PluginConfiguration", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class PluginConfiguration
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PluginConfiguration" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PluginConfiguration" /> class.</para>
        /// </summary>
        public PluginConfiguration()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildPlugins", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildPlugins
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Plugin> _plugin;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plugin")]
        public System.Collections.Generic.List<Plugin> Plugin
        {
            get
            {
                return this._plugin;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginSpecified
        {
            get
            {
                return (this.Plugin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildPlugins" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildPlugins" /> class.</para>
        /// </summary>
        public BuildPlugins()
        {
            this._plugin = new System.Collections.Generic.List<Plugin>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelReports", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelReports
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelReports" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelReports" /> class.</para>
        /// </summary>
        public ModelReports()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Section for management of reports and their configuration.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Reporting")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Reporting
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            If true, then the default reports are not included in the site generation.
///            This includes the reports in the "Project Info" menu. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;false&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("excludeDefaults", DataType="string")]
        public string ExcludeDefaults { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Where to store all of the generated reports. The default is
///            &lt;code&gt;${project.build.directory}/site&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("outputDirectory", DataType="string")]
        public string OutputDirectory { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportPlugin> _plugins;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The reporting plugins to use and their configuration.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("plugins")]
        [System.Xml.Serialization.XmlArrayItemAttribute("plugin")]
        public System.Collections.Generic.List<ReportPlugin> Plugins
        {
            get
            {
                return this._plugins;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugins-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugins collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginsSpecified
        {
            get
            {
                return (this.Plugins.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Reporting" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Reporting" /> class.</para>
        /// </summary>
        public Reporting()
        {
            this._plugins = new System.Collections.Generic.List<ReportPlugin>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportingPlugins", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportingPlugins
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportPlugin> _plugin;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plugin")]
        public System.Collections.Generic.List<ReportPlugin> Plugin
        {
            get
            {
                return this._plugin;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginSpecified
        {
            get
            {
                return (this.Plugin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportingPlugins" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportingPlugins" /> class.</para>
        /// </summary>
        public ReportingPlugins()
        {
            this._plugin = new System.Collections.Generic.List<ReportPlugin>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>
///        
///        The &lt;code&gt;&amp;lt;plugin&amp;gt;&lt;/code&gt; element contains informations required for a report plugin.
///        
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportPlugin")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportPlugin
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _groupId = "org.apache.maven.plugins";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The group ID of the reporting plugin in the repository.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("org.apache.maven.plugins")]
        [System.Xml.Serialization.XmlElementAttribute("groupId", DataType="string")]
        public string GroupId
        {
            get
            {
                return this._groupId;
            }
            set
            {
                this._groupId = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The artifact ID of the reporting plugin in the repository.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("artifactId", DataType="string")]
        public string ArtifactId { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The version of the reporting plugin to be used.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportSet> _reportSets;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Multiple specifications of a set of reports, each having (possibly) different
///            configuration. This is the reporting parallel to an &lt;code&gt;execution&lt;/code&gt; in the build.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("reportSets")]
        [System.Xml.Serialization.XmlArrayItemAttribute("reportSet")]
        public System.Collections.Generic.List<ReportSet> ReportSets
        {
            get
            {
                return this._reportSets;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReportSets-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ReportSets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportSetsSpecified
        {
            get
            {
                return (this.ReportSets.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportPlugin" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportPlugin" /> class.</para>
        /// </summary>
        public ReportPlugin()
        {
            this._reportSets = new System.Collections.Generic.List<ReportSet>();
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Whether any configuration should be propagated to child POMs. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;true&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("inherited", DataType="string")]
        public string Inherited { get; set; }
        
        /// <summary>
        /// <para>0.0.0+</para>
        /// <para>
///            
///            &lt;p&gt;The configuration as DOM object.&lt;/p&gt;
///            &lt;p&gt;By default, every element content is trimmed, but starting with Maven 3.1.0, you can add
///            &lt;code&gt;xml:space="preserve"&lt;/code&gt; to elements you want to preserve whitespace.&lt;/p&gt;
///            &lt;p&gt;You can control how child POMs inherit configuration from parent POMs by adding &lt;code&gt;combine.children&lt;/code&gt;
///            or &lt;code&gt;combine.self&lt;/code&gt; attributes to the children of the configuration element:&lt;/p&gt;
///            &lt;ul&gt;
///            &lt;li&gt;&lt;code&gt;combine.children&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;append&lt;/code&gt;,&lt;/li&gt;
///            &lt;li&gt;&lt;code&gt;combine.self&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;override&lt;/code&gt;.&lt;/li&gt;
///            &lt;/ul&gt;
///            &lt;p&gt;See &lt;a href="http://maven.apache.org/pom.html#Plugins"&gt;POM Reference documentation&lt;/a&gt; and
///            &lt;a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3DomUtils.html"&gt;Xpp3DomUtils&lt;/a&gt;
///            for more information.&lt;/p&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("configuration")]
        public ReportPluginConfiguration Configuration { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportPluginReportSets", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportPluginReportSets
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportSet> _reportSet;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("reportSet")]
        public System.Collections.Generic.List<ReportSet> ReportSet
        {
            get
            {
                return this._reportSet;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReportSet-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ReportSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportSetSpecified
        {
            get
            {
                return (this.ReportSet.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportPluginReportSets" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportPluginReportSets" /> class.</para>
        /// </summary>
        public ReportPluginReportSets()
        {
            this._reportSet = new System.Collections.Generic.List<ReportSet>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Represents a set of reports and configuration to be used to generate them.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportSet")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportSet
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _id = "default";
        
        /// <summary>
        /// <para>0.0.0+</para>
        /// <para>The unique id for this report set, to be used during POM inheritance and profile injection
///            for merging of report sets.
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("default")]
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reports;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The list of reports from this plugin which should be generated from this set.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("reports")]
        [System.Xml.Serialization.XmlArrayItemAttribute("report", DataType="string")]
        public System.Collections.Generic.List<string> Reports
        {
            get
            {
                return this._reports;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reports-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Reports collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportsSpecified
        {
            get
            {
                return (this.Reports.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportSet" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportSet" /> class.</para>
        /// </summary>
        public ReportSet()
        {
            this._reports = new System.Collections.Generic.List<string>();
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Whether any configuration should be propagated to child POMs. Note: While the type
///            of this field is &lt;code&gt;String&lt;/code&gt; for technical reasons, the semantic type is actually
///            &lt;code&gt;Boolean&lt;/code&gt;. Default value is &lt;code&gt;true&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("inherited", DataType="string")]
        public string Inherited { get; set; }
        
        /// <summary>
        /// <para>0.0.0+</para>
        /// <para>
///            
///            &lt;p&gt;The configuration as DOM object.&lt;/p&gt;
///            &lt;p&gt;By default, every element content is trimmed, but starting with Maven 3.1.0, you can add
///            &lt;code&gt;xml:space="preserve"&lt;/code&gt; to elements you want to preserve whitespace.&lt;/p&gt;
///            &lt;p&gt;You can control how child POMs inherit configuration from parent POMs by adding &lt;code&gt;combine.children&lt;/code&gt;
///            or &lt;code&gt;combine.self&lt;/code&gt; attributes to the children of the configuration element:&lt;/p&gt;
///            &lt;ul&gt;
///            &lt;li&gt;&lt;code&gt;combine.children&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;append&lt;/code&gt;,&lt;/li&gt;
///            &lt;li&gt;&lt;code&gt;combine.self&lt;/code&gt;: available values are &lt;code&gt;merge&lt;/code&gt; (default) and &lt;code&gt;override&lt;/code&gt;.&lt;/li&gt;
///            &lt;/ul&gt;
///            &lt;p&gt;See &lt;a href="http://maven.apache.org/pom.html#Plugins"&gt;POM Reference documentation&lt;/a&gt; and
///            &lt;a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3DomUtils.html"&gt;Xpp3DomUtils&lt;/a&gt;
///            for more information.&lt;/p&gt;
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("configuration")]
        public ReportSetConfiguration Configuration { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportSetReports", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportSetReports
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _report;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("report", DataType="string")]
        public System.Collections.Generic.List<string> Report
        {
            get
            {
                return this._report;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Report-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Report collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportSpecified
        {
            get
            {
                return (this.Report.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportSetReports" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportSetReports" /> class.</para>
        /// </summary>
        public ReportSetReports()
        {
            this._report = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportSetConfiguration", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportSetConfiguration
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportSetConfiguration" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportSetConfiguration" /> class.</para>
        /// </summary>
        public ReportSetConfiguration()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ReportPluginConfiguration", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ReportPluginConfiguration
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReportPluginConfiguration" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportPluginConfiguration" /> class.</para>
        /// </summary>
        public ReportPluginConfiguration()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ModelProfiles", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ModelProfiles
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Profile> _profile;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("profile")]
        public System.Collections.Generic.List<Profile> Profile
        {
            get
            {
                return this._profile;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Profile-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Profile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfileSpecified
        {
            get
            {
                return (this.Profile.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ModelProfiles" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ModelProfiles" /> class.</para>
        /// </summary>
        public ModelProfiles()
        {
            this._profile = new System.Collections.Generic.List<Profile>();
        }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>Modifications to the build process which is activated based on environmental
///        parameters or command line arguments.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Profile")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Profile
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _id = "default";
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The identifier of this build profile. This is used for command line
///            activation, and identifies profiles to be merged.
///          </para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("default")]
        [System.Xml.Serialization.XmlElementAttribute("id", DataType="string")]
        public string Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The conditional logic which will automatically trigger the inclusion of this
///            profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("activation")]
        public Activation Activation { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Information required to build the project.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("build")]
        public BuildBase Build { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _modules;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The modules (sometimes called subprojects) to build as a part of this
///            project. Each module listed is a relative path to the directory containing the module.
///            To be consistent with the way default urls are calculated from parent, it is recommended
///            to have module names match artifact ids.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("modules")]
        [System.Xml.Serialization.XmlArrayItemAttribute("module", DataType="string")]
        public System.Collections.Generic.List<string> Modules
        {
            get
            {
                return this._modules;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modules-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Modules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModulesSpecified
        {
            get
            {
                return (this.Modules.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Profile" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Profile" /> class.</para>
        /// </summary>
        public Profile()
        {
            this._modules = new System.Collections.Generic.List<string>();
            this._dependencies = new System.Collections.Generic.List<Dependency>();
            this._repositories = new System.Collections.Generic.List<Repository>();
            this._pluginRepositories = new System.Collections.Generic.List<Repository>();
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Distribution information for a project that enables deployment of the site
///            and artifacts to remote web servers and repositories respectively.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distributionManagement")]
        public DistributionManagement DistributionManagement { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Properties that can be used throughout the POM as a substitution, and
///            are used as filters in resources if enabled.
///            The format is &lt;code&gt;&amp;lt;name&amp;gt;value&amp;lt;/name&amp;gt;&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("properties")]
        public ProfileProperties Properties { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Default dependency information for projects that inherit from this one. The
///            dependencies in this section are not immediately resolved. Instead, when a POM derived
///            from this one declares a dependency described by a matching groupId and artifactId, the
///            version and other values from this section are used for that dependency if they were not
///            already specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependencyManagement")]
        public DependencyManagement DependencyManagement { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependencies;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            
///            This element describes all of the dependencies associated with a
///            project.
///            These dependencies are used to construct a classpath for your
///            project during the build process. They are automatically downloaded from the
///            repositories defined in this project.
///            See &lt;a href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html"&gt;the
///            dependency mechanism&lt;/a&gt; for more information.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("dependencies")]
        [System.Xml.Serialization.XmlArrayItemAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependencies
        {
            get
            {
                return this._dependencies;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependencies-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependencies collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependenciesSpecified
        {
            get
            {
                return (this.Dependencies.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _repositories;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The lists of the remote repositories for discovering dependencies and
///            extensions.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("repositories")]
        [System.Xml.Serialization.XmlArrayItemAttribute("repository")]
        public System.Collections.Generic.List<Repository> Repositories
        {
            get
            {
                return this._repositories;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Repositories-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Repositories collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepositoriesSpecified
        {
            get
            {
                return (this.Repositories.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _pluginRepositories;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The lists of the remote repositories for discovering plugins for builds and
///            reports.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("pluginRepositories")]
        [System.Xml.Serialization.XmlArrayItemAttribute("pluginRepository")]
        public System.Collections.Generic.List<Repository> PluginRepositories
        {
            get
            {
                return this._pluginRepositories;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PluginRepositories-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PluginRepositories collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginRepositoriesSpecified
        {
            get
            {
                return (this.PluginRepositories.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            &lt;b&gt;Deprecated&lt;/b&gt;. Now ignored by Maven.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("reports")]
        public ProfileReports Reports { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            This element includes the specification of report plugins to use
///            to generate the reports on the Maven-generated site.
///            These reports will be run when a user executes &lt;code&gt;mvn site&lt;/code&gt;.
///            All of the reports will be included in the navigation bar for browsing.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("reporting")]
        public Reporting Reporting { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>The conditions within the build runtime environment which will trigger the
///        automatic inclusion of the build profile. Multiple conditions can be defined, which must
///        be all satisfied to activate the profile.
///      </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("Activation")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Activation
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _activeByDefault = false;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>If set to true, this profile will be active unless another profile in this
///            pom is activated using the command line -P option or by one of that profile's
///            activators.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("activeByDefault", DataType="boolean")]
        public bool ActiveByDefault
        {
            get
            {
                return this._activeByDefault;
            }
            set
            {
                this._activeByDefault = value;
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            Specifies that this profile will be activated when a matching JDK is detected.
///            For example, &lt;code&gt;1.4&lt;/code&gt; only activates on JDKs versioned 1.4,
///            while &lt;code&gt;!1.4&lt;/code&gt; matches any JDK that is not version 1.4. Ranges are supported too:
///            &lt;code&gt;[1.5,)&lt;/code&gt; activates when the JDK is 1.5 minimum.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("jdk", DataType="string")]
        public string Jdk { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Specifies that this profile will be activated when matching operating system
///            attributes are detected.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("os")]
        public ActivationOS Os { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Specifies that this profile will be activated when this system property is
///            specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public ActivationProperty Property { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Specifies that this profile will be activated based on existence of a file.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("file")]
        public ActivationFile File { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>This is an activator which will detect an operating system's attributes in order
///        to activate its profile.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ActivationOS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ActivationOS
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The name of the operating system to be used to activate the profile. This must be an exact match
///            of the &lt;code&gt;${os.name}&lt;/code&gt; Java property, such as &lt;code&gt;Windows XP&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The general family of the OS to be used to activate the profile, such as
///            &lt;code&gt;windows&lt;/code&gt; or &lt;code&gt;unix&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("family", DataType="string")]
        public string Family { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The architecture of the operating system to be used to activate the
///          profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("arch", DataType="string")]
        public string Arch { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The version of the operating system to be used to activate the
///          profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("version", DataType="string")]
        public string Version { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>This is the property specification used to activate a profile. If the value field
///        is empty, then the existence of the named property will activate the profile, otherwise it
///        does a case-sensitive match against the property value as well.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ActivationProperty")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ActivationProperty
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The name of the property to be used to activate a profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The value of the property required to activate a profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("value", DataType="string")]
        public string Value { get; set; }
    }
    
    /// <summary>
    /// <para>4.0.0+</para>
    /// <para>This is the file specification used to activate the profile. The &lt;code&gt;missing&lt;/code&gt; value
///        is the location of a file that needs to exist, and if it doesn't, the profile will be
///        activated. On the other hand, &lt;code&gt;exists&lt;/code&gt; will test for the existence of the file and if it is
///        there, the profile will be activated.&lt;br/&gt;
///        Variable interpolation for these file specifications is limited to &lt;code&gt;${basedir}&lt;/code&gt;,
///        System properties and request properties.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ActivationFile")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ActivationFile
    {
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The name of the file that must be missing to activate the
///          profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("missing", DataType="string")]
        public string Missing { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The name of the file that must exist to activate the profile.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("exists", DataType="string")]
        public string Exists { get; set; }
    }
    
    /// <summary>
    /// <para>3.0.0+</para>
    /// <para>Generic informations for a build.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildBase")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildBase
    {
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>The default goal (or phase in Maven 2) to execute when none is specified for
///            the project. Note that in case of a multi-module build, only the default goal of the top-level
///            project is relevant, i.e. the default goals of child modules are ignored. Since Maven 3,
///            multiple goals/phases can be separated by whitespace.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("defaultGoal", DataType="string")]
        public string DefaultGoal { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _resources;
        
        /// <summary>
        /// <para>3.0.0+</para>
        /// <para>
///            This element describes all of the classpath resources such as properties
///            files associated with a project. These resources are often included in the final
///            package.
///            The default value is &lt;code&gt;src/main/resources&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("resources")]
        [System.Xml.Serialization.XmlArrayItemAttribute("resource")]
        public System.Collections.Generic.List<Resource> Resources
        {
            get
            {
                return this._resources;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Resources-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Resources collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResourcesSpecified
        {
            get
            {
                return (this.Resources.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildBase" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildBase" /> class.</para>
        /// </summary>
        public BuildBase()
        {
            this._resources = new System.Collections.Generic.List<Resource>();
            this._testResources = new System.Collections.Generic.List<Resource>();
            this._filters = new System.Collections.Generic.List<string>();
            this._plugins = new System.Collections.Generic.List<Plugin>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _testResources;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            This element describes all of the classpath resources such as properties
///            files associated with a project's unit tests.
///            The default value is &lt;code&gt;src/test/resources&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("testResources")]
        [System.Xml.Serialization.XmlArrayItemAttribute("testResource")]
        public System.Collections.Generic.List<Resource> TestResources
        {
            get
            {
                return this._testResources;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TestResources-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TestResources collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestResourcesSpecified
        {
            get
            {
                return (this.TestResources.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            The directory where all files generated by the build are placed.
///            The default value is &lt;code&gt;target&lt;/code&gt;.
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("directory", DataType="string")]
        public string Directory { get; set; }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>
///            
///            The filename (excluding the extension, and with no path information) that
///            the produced artifact will be called.
///            The default value is &lt;code&gt;${artifactId}-${version}&lt;/code&gt;.
///            
///          </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("finalName", DataType="string")]
        public string FinalName { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _filters;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The list of filter properties files that are used when filtering is enabled.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("filters")]
        [System.Xml.Serialization.XmlArrayItemAttribute("filter", DataType="string")]
        public System.Collections.Generic.List<string> Filters
        {
            get
            {
                return this._filters;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filters-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>Default plugin information to be made available for reference by projects
///            derived from this one. This plugin configuration will not be resolved or bound to the
///            lifecycle unless referenced. Any local configuration for a given plugin will override
///            the plugin's entire definition here.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("pluginManagement")]
        public PluginManagement PluginManagement { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Plugin> _plugins;
        
        /// <summary>
        /// <para>4.0.0+</para>
        /// <para>The list of plugins to use.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("plugins")]
        [System.Xml.Serialization.XmlArrayItemAttribute("plugin")]
        public System.Collections.Generic.List<Plugin> Plugins
        {
            get
            {
                return this._plugins;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugins-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugins collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginsSpecified
        {
            get
            {
                return (this.Plugins.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildBaseResources", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildBaseResources
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _resource;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("resource")]
        public System.Collections.Generic.List<Resource> Resource
        {
            get
            {
                return this._resource;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Resource-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Resource collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResourceSpecified
        {
            get
            {
                return (this.Resource.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildBaseResources" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildBaseResources" /> class.</para>
        /// </summary>
        public BuildBaseResources()
        {
            this._resource = new System.Collections.Generic.List<Resource>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildBaseTestResources", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildBaseTestResources
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Resource> _testResource;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("testResource")]
        public System.Collections.Generic.List<Resource> TestResource
        {
            get
            {
                return this._testResource;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TestResource-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TestResource collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestResourceSpecified
        {
            get
            {
                return (this.TestResource.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildBaseTestResources" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildBaseTestResources" /> class.</para>
        /// </summary>
        public BuildBaseTestResources()
        {
            this._testResource = new System.Collections.Generic.List<Resource>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildBaseFilters", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildBaseFilters
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _filter;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("filter", DataType="string")]
        public System.Collections.Generic.List<string> Filter
        {
            get
            {
                return this._filter;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filter-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Filter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilterSpecified
        {
            get
            {
                return (this.Filter.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildBaseFilters" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildBaseFilters" /> class.</para>
        /// </summary>
        public BuildBaseFilters()
        {
            this._filter = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("BuildBasePlugins", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BuildBasePlugins
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Plugin> _plugin;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plugin")]
        public System.Collections.Generic.List<Plugin> Plugin
        {
            get
            {
                return this._plugin;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Plugin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Plugin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginSpecified
        {
            get
            {
                return (this.Plugin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BuildBasePlugins" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BuildBasePlugins" /> class.</para>
        /// </summary>
        public BuildBasePlugins()
        {
            this._plugin = new System.Collections.Generic.List<Plugin>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ProfileModules", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ProfileModules
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _module;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("module", DataType="string")]
        public System.Collections.Generic.List<string> Module
        {
            get
            {
                return this._module;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Module-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Module collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModuleSpecified
        {
            get
            {
                return (this.Module.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ProfileModules" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ProfileModules" /> class.</para>
        /// </summary>
        public ProfileModules()
        {
            this._module = new System.Collections.Generic.List<string>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ProfileProperties", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ProfileProperties
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ProfileProperties" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ProfileProperties" /> class.</para>
        /// </summary>
        public ProfileProperties()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ProfileDependencies", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ProfileDependencies
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Dependency> _dependency;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependency")]
        public System.Collections.Generic.List<Dependency> Dependency
        {
            get
            {
                return this._dependency;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dependency-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Dependency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependencySpecified
        {
            get
            {
                return (this.Dependency.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ProfileDependencies" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ProfileDependencies" /> class.</para>
        /// </summary>
        public ProfileDependencies()
        {
            this._dependency = new System.Collections.Generic.List<Dependency>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ProfileRepositories", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ProfileRepositories
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _repository;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("repository")]
        public System.Collections.Generic.List<Repository> Repository
        {
            get
            {
                return this._repository;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Repository-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Repository collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepositorySpecified
        {
            get
            {
                return (this.Repository.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ProfileRepositories" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ProfileRepositories" /> class.</para>
        /// </summary>
        public ProfileRepositories()
        {
            this._repository = new System.Collections.Generic.List<Repository>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ProfilePluginRepositories", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ProfilePluginRepositories
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Repository> _pluginRepository;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("pluginRepository")]
        public System.Collections.Generic.List<Repository> PluginRepository
        {
            get
            {
                return this._pluginRepository;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PluginRepository-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PluginRepository collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PluginRepositorySpecified
        {
            get
            {
                return (this.PluginRepository.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ProfilePluginRepositories" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ProfilePluginRepositories" /> class.</para>
        /// </summary>
        public ProfilePluginRepositories()
        {
            this._pluginRepository = new System.Collections.Generic.List<Repository>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.34.0")]
    [System.Xml.Serialization.XmlTypeAttribute("ProfileReports", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class ProfileReports
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ProfileReports" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ProfileReports" /> class.</para>
        /// </summary>
        public ProfileReports()
        {
            this._any = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        }
    }
}
